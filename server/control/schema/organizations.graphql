extend type Query {
  me: PrivateOrganization
  organizationByName(name: String!): Organization!
  organizationByID(organizationID: UUID!): Organization!
  organizationByUserID(userID: UUID!): Organization!
  organizationMembers(organizationID: UUID!): [OrganizationMember!]!
}

extend type Mutation {
  createOrganization(name: String!): PrivateOrganization!
  updateOrganization(organizationID: UUID!, name: String, displayName: String, description: String, photoURL: String): PrivateOrganization!
  updateOrganizationQuotas(organizationID: UUID!, readQuota: Int, writeQuota: Int, scanQuota: Int): PrivateOrganization!

  inviteUserToOrganization(userID: UUID!, organizationID: UUID!, view: Boolean!, create: Boolean!, admin: Boolean!): Boolean!
  acceptOrganizationInvite(organizationID: UUID!): Boolean!
  leaveBillingOrganization(userID: UUID!): PrivateUser!

  transferProjectToOrganization(projectID: UUID!, organizationID: UUID!): Project!
}

interface Organization {
  organizationID: ID!
  name: String!
  displayName: String!
  description: String
  photoURL: String
  createdOn: Time!
  projects: [Project!]!
  personalUserID: UUID
}

type PublicOrganization implements Organization {
  organizationID: ID!
  name: String!
  displayName: String!
  description: String
  photoURL: String
  createdOn: Time!
  projects: [Project!]!
  personalUserID: UUID
}

type PrivateOrganization implements Organization {
  organizationID: ID!
  name: String!
  displayName: String!
  description: String
  photoURL: String
  createdOn: Time!
  updatedOn: Time!
  quotaEpoch: Time!
  quotaStartTime: Time!
  quotaEndTime: Time!
  readQuota: Int
  writeQuota: Int
  scanQuota: Int
  prepaidReadQuota: Int
  prepaidWriteQuota: Int
  prepaidScanQuota: Int
  readUsage: Int!
  writeUsage: Int!
  scanUsage: Int!
  projects: [Project!]!
  personalUserID: UUID
  personalUser: PrivateUser
  permissions: PermissionsUsersOrganizations!
}

type OrganizationMember {
  organizationID: ID!
  userID: ID!
  billingOrganizationID: UUID!
  name: String!
  displayName: String!
  photoURL: String
  view: Boolean!
  create: Boolean!
  admin: Boolean!
  quotaEpoch: Time!
  quotaStartTime: Time!
  quotaEndTime: Time!
  readQuota: Int
  writeQuota: Int
  scanQuota: Int
}
