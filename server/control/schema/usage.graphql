extend type Query {
  getUsage(input: GetUsageInput!): [Usage!]!
  getOrganizationUsage(input: GetEntityUsageInput!): [Usage!]!
  getServiceUsage(input: GetEntityUsageInput!): [Usage!]!
  getStreamInstanceUsage(input: GetEntityUsageInput!): [Usage!]!
  getStreamUsage(input: GetEntityUsageInput!): [Usage!]!
  getUserUsage(input: GetEntityUsageInput!): [Usage!]!
}

type Usage {
  entityID: UUID!
  label: UsageLabel!
  time: Time!
  readOps: Int!
  readBytes: Int!
  readRecords: Int!
  writeOps: Int!
  writeBytes: Int!
  writeRecords: Int!
  scanOps: Int!
  scanBytes: Int!
}

enum EntityKind {
  Organization
  Service
  StreamInstance
  Stream
  User
}

enum UsageLabel {
  Total
  QuotaMonth
  Monthly
  Hourly
}

input GetUsageInput {
  entityKind: EntityKind!
  entityID: UUID!
  label: UsageLabel!
  from: Time
  until: Time
}

input GetEntityUsageInput {
  entityID: UUID!
  label: UsageLabel!
  from: Time
  until: Time
}
