# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: engine.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='engine.proto',
  package='proto',
  syntax='proto3',
  serialized_options=_b('\n\025network.beneath.protoB\005ProtoP\001'),
  serialized_pb=_b('\n\x0c\x65ngine.proto\x12\x05proto\"4\n\x06Record\x12\x11\n\tavro_data\x18\x01 \x01(\x0c\x12\x17\n\x0fsequence_number\x18\x02 \x01(\x03\"J\n\x13WriteRecordsRequest\x12\x13\n\x0binstance_id\x18\x01 \x01(\x0c\x12\x1e\n\x07records\x18\x02 \x03(\x0b\x32\r.proto.Record\"N\n\x12WriteRecordsReport\x12\x13\n\x0binstance_id\x18\x01 \x01(\x0c\x12\x15\n\rbytes_written\x18\x02 \x01(\x03\x12\x0c\n\x04keys\x18\x03 \x03(\x0c\x42 \n\x15network.beneath.protoB\x05ProtoP\x01\x62\x06proto3')
)




_RECORD = _descriptor.Descriptor(
  name='Record',
  full_name='proto.Record',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='avro_data', full_name='proto.Record.avro_data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sequence_number', full_name='proto.Record.sequence_number', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=75,
)


_WRITERECORDSREQUEST = _descriptor.Descriptor(
  name='WriteRecordsRequest',
  full_name='proto.WriteRecordsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_id', full_name='proto.WriteRecordsRequest.instance_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='records', full_name='proto.WriteRecordsRequest.records', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=77,
  serialized_end=151,
)


_WRITERECORDSREPORT = _descriptor.Descriptor(
  name='WriteRecordsReport',
  full_name='proto.WriteRecordsReport',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_id', full_name='proto.WriteRecordsReport.instance_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bytes_written', full_name='proto.WriteRecordsReport.bytes_written', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='keys', full_name='proto.WriteRecordsReport.keys', index=2,
      number=3, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=153,
  serialized_end=231,
)

_WRITERECORDSREQUEST.fields_by_name['records'].message_type = _RECORD
DESCRIPTOR.message_types_by_name['Record'] = _RECORD
DESCRIPTOR.message_types_by_name['WriteRecordsRequest'] = _WRITERECORDSREQUEST
DESCRIPTOR.message_types_by_name['WriteRecordsReport'] = _WRITERECORDSREPORT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Record = _reflection.GeneratedProtocolMessageType('Record', (_message.Message,), {
  'DESCRIPTOR' : _RECORD,
  '__module__' : 'engine_pb2'
  # @@protoc_insertion_point(class_scope:proto.Record)
  })
_sym_db.RegisterMessage(Record)

WriteRecordsRequest = _reflection.GeneratedProtocolMessageType('WriteRecordsRequest', (_message.Message,), {
  'DESCRIPTOR' : _WRITERECORDSREQUEST,
  '__module__' : 'engine_pb2'
  # @@protoc_insertion_point(class_scope:proto.WriteRecordsRequest)
  })
_sym_db.RegisterMessage(WriteRecordsRequest)

WriteRecordsReport = _reflection.GeneratedProtocolMessageType('WriteRecordsReport', (_message.Message,), {
  'DESCRIPTOR' : _WRITERECORDSREPORT,
  '__module__' : 'engine_pb2'
  # @@protoc_insertion_point(class_scope:proto.WriteRecordsReport)
  })
_sym_db.RegisterMessage(WriteRecordsReport)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
