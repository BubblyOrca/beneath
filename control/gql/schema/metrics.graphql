extend type Query {
  getMetrics(entityKind: EntityKind!, entityID: UUID!, period: String!, from: Time!, until: Time): [Metrics!]!
  getOrganizationMetrics(organizationID: UUID!, period: String!, from: Time!, until: Time): [Metrics!]!
  getServiceMetrics(serviceID: UUID!, period: String!, from: Time!, until: Time): [Metrics!]!
  getStreamInstanceMetrics(streamInstanceID: UUID!, period: String!, from: Time!, until: Time): [Metrics!]!
  getStreamMetrics(streamID: UUID!, period: String!, from: Time!, until: Time): [Metrics!]!
  getUserMetrics(userID: UUID!, period: String!, from: Time!, until: Time): [Metrics!]!
}

type Metrics {
  entityID: UUID!
  period: String!
  time: Time!
  readOps: Int!
  readBytes: Int!
  readRecords: Int!
  writeOps: Int!
  writeBytes: Int!
  writeRecords: Int!
}

enum EntityKind {
  Organization
  Service
  StreamInstance
  Stream
  User
}