extend type Query {
  streamByID(streamID: UUID!): Stream!
  streamByProjectAndName(name: String!, projectName: String!): Stream!
}

extend type Mutation {
  createExternalStream(
    projectID: UUID!,
    schema: String!,
    batch: Boolean!,
    manual: Boolean!
  ): Stream!
  updateExternalStream(
    streamID: UUID!,
    schema: String,
    manual: Boolean,
  ): Stream!
  deleteExternalStream(streamID: UUID!): Boolean!
  createExternalStreamBatch(streamID: UUID!): StreamInstance!
  commitExternalStreamBatch(instanceID: UUID!): Boolean!
  clearPendingExternalStreamBatches(streamID: UUID!): Boolean!
}

type Stream {
  streamID: ID!
  name: String!
  description: String
  createdOn: Time!
  updatedOn: Time!
  project: Project!
  sourceModel: Model

  schema: String!
  avroSchema: String!
  canonicalAvroSchema: String!

  streamIndexes: [StreamIndex!]!

  external: Boolean!
  batch: Boolean!
  manual: Boolean!
  retentionSeconds: Int!
  
  instancesCreatedCount: Int!
  instancesCommittedCount: Int!
  currentStreamInstanceID: UUID
}

type StreamInstance {
  instanceID: ID!
  stream: Stream!
  createdOn: Time!
  committedOn: Time!
}

type StreamIndex {
  indexID: ID!
  fields: [String!]!
  primary: Boolean!
  normalize: Boolean!
}
