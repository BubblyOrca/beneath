extend type Query {
  organizationByName(name: String!): Organization
  usersOrganizationPermissions(organizationID: UUID!): [PermissionsUsersOrganizations!]!
}

extend type Mutation {
  createOrganization(name: String!): Organization!
  updateOrganizationName(organizationID: UUID!, name: String!): Organization!

  inviteUserToOrganization(userID: UUID!, organizationID: UUID!, view: Boolean!, create: Boolean!, admin: Boolean!): Boolean!
  acceptOrganizationInvite(organizationID: UUID!): Boolean!
  updateUserQuotas(userID: UUID!, readQuota: Int, writeQuota: Int): User!
  leaveBillingOrganization(userID: UUID!): User!

  transferProjectToOrganization(projectID: UUID!, organizationID: UUID!): Project!
  transferServiceToOrganization(serviceID: UUID!, organizationID: UUID!): Service!
}

type Organization {
  organizationID: ID!
  name: String!
  personal: Boolean!
  createdOn: Time!
  updatedOn: Time!
  services: [Service!]!
  users: [User!]!
  projects: [Project!]!
}
