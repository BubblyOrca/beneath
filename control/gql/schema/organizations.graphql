extend type Query {
  organizationByName(name: String!): Organization
  usersOrganizationPermissions(organizationID: UUID!): [PermissionsUsersOrganizations!]!
}

extend type Mutation {
  inviteUserToOrganization(username: String!, organizationID: UUID!, view: Boolean!, admin: Boolean!): User
  removeUserFromOrganization(userID: UUID!, organizationID: UUID!): Boolean!
  updateOrganizationName(organizationID: UUID!, name: String!): Organization!
  updateUserOrganizationQuotas(userID: UUID!, organizationID: UUID!, readQuota: Int, writeQuota: Int): User!
  updateUserOrganizationPermissions(userID: UUID!, organizationID: UUID!, view: Boolean, admin: Boolean): PermissionsUsersOrganizations!
}

type Organization {
  organizationID: ID!
  name: String!
  personal: Boolean!
  createdOn: Time!
  updatedOn: Time!
  services: [Service!]!
  users: [User!]!
  projects: [Project!]!
}

type PermissionsUsersOrganizations {
	user: User!
  organization: Organization!
	view: Boolean! 
	admin: Boolean!
}
