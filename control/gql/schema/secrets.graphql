extend type Query {
  secretsForService(serviceID: UUID!): [ServiceSecret!]!
  secretsForUser(userID: UUID!): [UserSecret!]!
}

extend type Mutation {
  issueServiceSecret(serviceID: UUID!, description: String!): NewServiceSecret!
  issueUserSecret(description: String!, readOnly: Boolean!, publicOnly: Boolean!): NewUserSecret!
  revokeServiceSecret(secretID: UUID!): Boolean!
  revokeUserSecret(secretID: UUID!): Boolean!
}

type ServiceSecret {
  serviceSecretID: ID!
  prefix: String!
  description: String!
  service: Service!
  createdOn: Time!
  updatedOn: Time!
}

type NewServiceSecret {
  secret: ServiceSecret!
  token: String!
}

type UserSecret {
  userSecretID: ID!
  prefix: String!
  description: String!
  readOnly: Boolean!
  publicOnly: Boolean!
  createdOn: Time!
  updatedOn: Time!
}

type NewUserSecret {
  secret: UserSecret!
  token: String!
}
