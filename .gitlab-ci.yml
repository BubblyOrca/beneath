stages:
  - build
  - deploy

.build:
  stage: build
  image: docker:stable
  services:
  - docker:dind
  before_script:
  - docker login -u _json_key -p "${GCR_SERVICE_KEY}" https://gcr.io
  when: manual
  only:
    - master

build_frontend:
  extends: .build
  variables:
    IMAGE: gcr.io/beneathcrypto/frontend
  script: 
    - docker pull ${IMAGE}:latest || true
    - docker build -f ./build/web/Dockerfile -t ${IMAGE}:latest -t ${IMAGE}:${CI_COMMIT_SHORT_SHA} --cache-from ${IMAGE}:latest ./web
    - docker push ${IMAGE}:${CI_COMMIT_SHORT_SHA}
    - docker push ${IMAGE}:latest

.build_go:
  script: 
    - docker pull ${IMAGE}:builder || true
    - docker build -f ./build/${CMD_NAME}/Dockerfile --target builder -t ${IMAGE}:builder --cache-from ${IMAGE}:builder .
    - docker build -f ./build/${CMD_NAME}/Dockerfile -t ${IMAGE}:latest -t ${IMAGE}:${CI_COMMIT_SHORT_SHA} --cache-from ${IMAGE}:builder .
    - docker push ${IMAGE}:${CI_COMMIT_SHORT_SHA}
    - docker push ${IMAGE}:latest
    - docker push ${IMAGE}:builder

build_control:
  extends:
  - .build
  - .build_go
  variables:
    CMD_NAME: control
    IMAGE: gcr.io/beneathcrypto/${CMD_NAME}

build_gateway:
  extends:
  - .build
  - .build_go
  variables:
    CMD_NAME: gateway
    IMAGE: gcr.io/beneathcrypto/${CMD_NAME}

build_pipeline:
  extends:
  - .build
  - .build_go
  variables:
    CMD_NAME: pipeline
    IMAGE: gcr.io/beneathcrypto/${CMD_NAME}

build_taskqueue:
  extends:
  - .build
  - .build_go
  variables:
    CMD_NAME: taskqueue
    IMAGE: gcr.io/beneathcrypto/${CMD_NAME}

.deploy:
  stage: deploy
  image: dtzar/helm-kubectl:2.14.3
  when: manual
  only:
    - master
  script:
    - helm init --client-only --service-account tiller
    - helm upgrade --install --wait --force ${CMD_NAME} helm/${CMD_NAME}/ --set image.tag=${CI_COMMIT_SHORT_SHA} --set replicaCount=${REPLICAS} --namespace=${KUBE_NAMESPACE}

.deploy_prod:
  variables:
    KUBE_NAMESPACE: production
  environment:
    name: production
    url: https://beneath.network

deploy_frontend:
  extends:
  - .deploy
  - .deploy_prod
  variables:
    CMD_NAME: frontend
    REPLICAS: ${REPLICAS_FRONTEND}
    REPLICAS_FRONTEND: 2

deploy_control:
  extends:
  - .deploy
  - .deploy_prod
  variables:
    CMD_NAME: control
    REPLICAS: ${REPLICAS_CONTROL}
    REPLICAS_CONTROL: 2

deploy_gateway:
  extends:
  - .deploy
  - .deploy_prod
  variables:
    CMD_NAME: gateway
    REPLICAS: ${REPLICAS_GATEWAY}
    REPLICAS_GATEWAY: 2

deploy_pipeline:
  extends:
  - .deploy
  - .deploy_prod
  variables:
    CMD_NAME: pipeline
    REPLICAS: ${REPLICAS_PIPELINE}
    REPLICAS_PIPELINE: 1

deploy_taskqueue:
  extends:
  - .deploy
  - .deploy_prod
  variables:
    CMD_NAME: taskqueue
    REPLICAS: ${REPLICAS_TASKQUEUE}
    REPLICAS_TASKQUEUE: 1
