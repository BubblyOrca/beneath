stages:
  - build
  - deploy

.build:
  stage: build
  image: docker:stable
  services:
  - docker:dind
  before_script:
  - docker login -u _json_key -p "${GCR_SERVICE_KEY}" https://gcr.io
  when: manual
  only:
    - stable

build:web:
  extends: .build
  variables:
    IMAGE: gcr.io/beneath/web
  script: 
    - docker pull ${IMAGE}:latest || true
    - docker build -f ./build/web/Dockerfile -t ${IMAGE}:latest -t ${IMAGE}:${CI_COMMIT_SHORT_SHA} --cache-from ${IMAGE}:latest ./web
    - docker push ${IMAGE}:${CI_COMMIT_SHORT_SHA}
    - docker push ${IMAGE}:latest

build:backend:
  variables:
    IMAGE: gcr.io/beneath/backend
  script: 
    - docker pull ${IMAGE}:builder || true
    - docker build -f ./build/backend/Dockerfile --target builder -t ${IMAGE}:builder --cache-from ${IMAGE}:builder .
    - docker build -f ./build/backend/Dockerfile -t ${IMAGE}:latest -t ${IMAGE}:${CI_COMMIT_SHORT_SHA} --cache-from ${IMAGE}:builder .
    - docker push ${IMAGE}:${CI_COMMIT_SHORT_SHA}
    - docker push ${IMAGE}:latest
    - docker push ${IMAGE}:builder

.deploy:
  stage: deploy
  image: dtzar/helm-kubectl:3.2.1
  only:
    - stable
  script:
    - helm upgrade --install --wait --force ${CMD_NAME} deployments/helm/${CMD_NAME}/ --set image.tag=${CI_COMMIT_SHORT_SHA} --set replicaCount=${REPLICAS} --namespace=${KUBE_NAMESPACE}

.deploy:prod:
  variables:
    KUBE_NAMESPACE: production
  environment:
    name: production
    url: https://beneath.dev

deploy:web:
  extends:
  - .deploy
  - .deploy:prod
  needs: ["build:web"]
  variables:
    CMD_NAME: web
    REPLICAS: ${REPLICAS_WEB}
    REPLICAS_WEB: 2

deploy:control:
  extends:
  - .deploy
  - .deploy:prod
  needs: ["build:backend"]
  variables:
    CMD_NAME: control
    REPLICAS: ${REPLICAS_CONTROL}
    REPLICAS_CONTROL: 2

deploy:gateway:
  extends:
  - .deploy
  - .deploy:prod
  needs: ["build:backend"]
  variables:
    CMD_NAME: gateway
    REPLICAS: ${REPLICAS_GATEWAY}
    REPLICAS_GATEWAY: 2

deploy:pipeline:
  extends:
  - .deploy
  - .deploy:prod
  needs: ["build:backend"]
  variables:
    CMD_NAME: pipeline
    REPLICAS: ${REPLICAS_PIPELINE}
    REPLICAS_PIPELINE: 1

deploy:taskqueue:
  extends:
  - .deploy
  - .deploy:prod
  needs: ["build:backend"]
  variables:
    CMD_NAME: taskqueue
    REPLICAS: ${REPLICAS_TASKQUEUE}
    REPLICAS_TASKQUEUE: 1
