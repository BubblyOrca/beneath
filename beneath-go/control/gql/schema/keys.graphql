extend type Query {
  keysForUser(userID: UUID!): [Key!]!
  keysForProject(projectID: UUID!): [Key!]!
}

extend type Mutation {
  issueUserKey(userID: UUID!, readonly: Boolean!, description: String!): NewKey!
  issueProjectKey(projectID: UUID!, readonly: Boolean!, description: String!): NewKey!
  revokeKey(keyID: UUID!): Boolean!
}

type Key {
  keyID: ID!
  description: String!
  prefix: String!
  role: String!
  createdOn: Time!
  updatedOn: Time!
}

type NewKey {
  key: Key!
  keyString: String!
}
