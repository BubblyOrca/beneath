extend type Query {
  stream(name: String!, projectName: String!): Stream!
}

extend type Mutation {
  createExternalStream(
    projectID: UUID!,
    schema: String!,
    batch: Boolean!,
    manual: Boolean!
  ): Stream!
  updateExternalStream(
    streamID: UUID!,
    schema: String,
    manual: Boolean,
  ): Stream!
  deleteExternalStream(streamID: UUID!): Boolean!
  createExternalStreamBatch(streamID: UUID!): StreamInstance!
  commitExternalStreamBatch(instanceID: UUID!): Boolean!
  clearPendingExternalStreamBatches(streamID: UUID!): Boolean!
}

type Stream {
  streamID: ID!
  name: String!
  description: String
  schema: String!
  avroSchema: String!
  canonicalAvroSchema: String!
  keyFields: [String!]!
  external: Boolean!
  batch: Boolean!
  manual: Boolean!
  project: Project!
  currentStreamInstanceID: UUID
  sourceModel: Model
  createdOn: Time!
  updatedOn: Time!
}

type StreamInstance {
  instanceID: ID!
  stream: Stream!
  createdOn: Time!
  committedOn: Time!
}
