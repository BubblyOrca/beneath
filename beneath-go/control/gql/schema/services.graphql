extend type Query {
  service(serviceID: UUID!): Service
}

extend type Mutation {
  createService(name: String!, organizationID: UUID!, readQuota: Int!, writeQuota: Int!): Service!
  updateService(serviceID: UUID!, name: String, readQuota: Int, writeQuota: Int): Service!
  deleteService(serviceID: UUID!): Boolean!
  updateServicePermissions(serviceID: UUID!, streamID: UUID!, read: Boolean, write: Boolean): PermissionsServicesStreams!
}

type Service {
  serviceID: UUID!
  name: String!
  kind: String!
  organization: Organization!
  readQuota: Int!
  writeQuota: Int!
}

type PermissionsServicesStreams {
  serviceID: UUID!
  streamID: UUID!
  read: Boolean!
  write: Boolean!
}
