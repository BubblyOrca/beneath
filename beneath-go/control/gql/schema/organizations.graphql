extend type Query {
  organizationByName(name: String!): Organization
}

extend type Mutation {
  createOrganization(name: String!): Organization!
  addUserToOrganization(username: String!, organizationID: UUID!, view: Boolean!, admin: Boolean!): User
  removeUserFromOrganization(userID: UUID!, organizationID: UUID!): Boolean!
  updateUserOrganizationQuotas(userID: UUID!, organizationID: UUID!, readQuota: Int, writeQuota: Int): User!
  # updateUserOrganizationPermissions(userID: UUID!, organizationID: UUID!, view: Boolean, admin: Boolean): PermissionsUsersOrganizations
}

type Organization {
  organizationID: ID!
  name: String!
  personal: Boolean!
  createdOn: Time!
  updatedOn: Time!
  services: [Service!]!
  users: [User!]!
}

# type PermissionsUsersOrganizations {
# 	user: User!
# 	organization: Organization!
# 	view: Boolean! 
# 	admin: Boolean!
# }
