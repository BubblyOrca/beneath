// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gql

import (
	"time"

	"github.com/beneath-core/beneath-go/control/entity"
	"github.com/satori/go.uuid"
)

type BillingInfo struct {
	OrganizationID uuid.UUID           `json:"organizationID"`
	BillingPlan    *entity.BillingPlan `json:"billingPlan"`
	PaymentsDriver string              `json:"paymentsDriver"`
}

type CreateModelInput struct {
	ProjectID           uuid.UUID   `json:"projectID"`
	Name                string      `json:"name"`
	Kind                string      `json:"kind"`
	SourceURL           *string     `json:"sourceURL"`
	Description         *string     `json:"description"`
	InputStreamIDs      []uuid.UUID `json:"inputStreamIDs"`
	OutputStreamSchemas []string    `json:"outputStreamSchemas"`
	ReadQuota           int         `json:"readQuota"`
	WriteQuota          int         `json:"writeQuota"`
}

type Me struct {
	UserID       string               `json:"userID"`
	User         *entity.User         `json:"user"`
	Email        string               `json:"email"`
	Organization *entity.Organization `json:"organization"`
	ReadUsage    int                  `json:"readUsage"`
	ReadQuota    int                  `json:"readQuota"`
	WriteUsage   int                  `json:"writeUsage"`
	WriteQuota   int                  `json:"writeQuota"`
	UpdatedOn    time.Time            `json:"updatedOn"`
}

type Metrics struct {
	EntityID     uuid.UUID `json:"entityID"`
	Period       string    `json:"period"`
	Time         time.Time `json:"time"`
	ReadOps      int       `json:"readOps"`
	ReadBytes    int       `json:"readBytes"`
	ReadRecords  int       `json:"readRecords"`
	WriteOps     int       `json:"writeOps"`
	WriteBytes   int       `json:"writeBytes"`
	WriteRecords int       `json:"writeRecords"`
}

type NewServiceSecret struct {
	Secret *entity.ServiceSecret `json:"secret"`
	Token  string                `json:"token"`
}

type NewUserSecret struct {
	Secret *entity.UserSecret `json:"secret"`
	Token  string             `json:"token"`
}

type UpdateModelInput struct {
	ModelID             uuid.UUID   `json:"modelID"`
	SourceURL           *string     `json:"sourceURL"`
	Description         *string     `json:"description"`
	InputStreamIDs      []uuid.UUID `json:"inputStreamIDs"`
	OutputStreamSchemas []string    `json:"outputStreamSchemas"`
	ReadQuota           *int        `json:"readQuota"`
	WriteQuota          *int        `json:"writeQuota"`
}
