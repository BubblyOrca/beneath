syntax = "proto3";

option java_multiple_files = true;
option java_package = "network.beneath.proto";
option java_outer_classname = "BeneathProto";

package proto;

import "engine.proto";

message CursorSet {
  repeated bytes cursors = 1;
}

service Gateway {
  rpc Query(QueryRequest) returns (QueryResponse) {}
  rpc Read(ReadRequest) returns (ReadResponse) {}
  rpc Subscribe(SubscribeRequest) returns (stream SubscribeResponse) {}
  rpc Peek(PeekRequest) returns (PeekResponse) {}
  rpc Repartition(RepartitionRequest) returns (RepartitionResponse) {}
  rpc Write(WriteRequest) returns (WriteResponse) {}

  rpc Ping(PingRequest) returns (PingResponse) {}
  rpc GetStream(GetStreamRequest) returns (GetStreamResponse) {}
}

message QueryRequest {
  bytes  instance_id = 1;
  string filter      = 2;
  bool   compact     = 3;
  int32  partitions  = 4;
  // dry
  // sample
}

message QueryResponse {
  repeated bytes replay_cursors = 1;
  repeated bytes change_cursors = 2;
}

message ReadRequest {
  bytes instance_id = 1;
  bytes cursor = 2;
  int32 limit  = 3;
}

message ReadResponse {
  repeated Record records = 1;
  bytes next_cursor = 2;
}

message SubscribeRequest {
  bytes instance_id = 1;
  bytes cursor = 2;
}

message SubscribeResponse {
  repeated Record records = 1;
  bytes from_cursor = 2;
  bytes next_cursor = 3;
}

message PeekRequest {
  bytes instance_id = 1;
  int32 limit = 2;
}

message PeekResponse {
  repeated Record records = 1;
  bytes change_cursor = 2;
}

message RepartitionRequest {
  bytes instance_id = 1;
  int32 partitions = 2;
  repeated bytes replay_cursors = 3;
  repeated bytes change_cursors = 4;
}

message RepartitionResponse {
  repeated bytes replay_cursors = 1;
  repeated bytes change_cursors = 2;
}

message WriteRequest {
  bytes instance_id = 1;
  repeated Record records = 2;
}

message WriteResponse {
}

message PingRequest {
  string client_id = 1;
  string client_version = 2;
}

message PingResponse {
  bool  authenticated = 1;
  string version_status = 2;
  string recommended_version = 3;
}

message GetStreamRequest {
  string project_name = 1;
  string stream_name  = 2;
}

message GetStreamResponse {
  bytes  project_id = 1;
  string project_name = 2;
  bytes  stream_id = 3;
  string stream_name = 4;
  bytes current_instance_id = 5;
  bool public = 6;
  bool external = 7;
  bool batch = 8;
  bool manual = 9;
  bool committed = 10;
  int32 retention_seconds = 11;
  string avro_schema = 12;
  repeated StreamIndexDetails indexes = 13;
}

message StreamIndexDetails {
  bytes index_id = 1;
  repeated string fields = 2;
  bool primary = 3;
  bool normalize = 4;
}
